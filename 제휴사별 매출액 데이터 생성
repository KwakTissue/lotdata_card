{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"제휴사별 매출액 데이터 생성","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyME5PsH/k0a6Yl7SKQ53XYy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mAWCAEcd1CFZ","executionInfo":{"status":"ok","timestamp":1659599565160,"user_tz":-540,"elapsed":68373,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"08f61902-3bc7-409b-fe2a-90546133270d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Selecting previously unselected package fonts-nanum.\n","(Reading database ... 155673 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...\n","Unpacking fonts-nanum (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-eco.\n","Preparing to unpack .../fonts-nanum-eco_1.000-6_all.deb ...\n","Unpacking fonts-nanum-eco (1.000-6) ...\n","Selecting previously unselected package fonts-nanum-extra.\n","Preparing to unpack .../fonts-nanum-extra_20170925-1_all.deb ...\n","Unpacking fonts-nanum-extra (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-coding.\n","Preparing to unpack .../fonts-nanum-coding_2.5-1_all.deb ...\n","Unpacking fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-extra (20170925-1) ...\n","Setting up fonts-nanum (20170925-1) ...\n","Setting up fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-eco (1.000-6) ...\n","Processing triggers for fontconfig (2.12.6-0ubuntu2) ...\n","NanumBarunGothic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py:2882: DtypeWarning: Columns (4) have mixed types.Specify dtype option on import or set low_memory=False.\n","  exec(code_obj, self.user_global_ns, self.user_ns)\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","import seaborn as sns\n","\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","import matplotlib.font_manager as fm\n","!apt-get update -qq\n","!apt-get install fonts-nanum* -qq\n","path = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \n","font_name = fm.FontProperties(fname=path, size=10).get_name()\n","print(font_name)\n","plt.rc('font', family=font_name)\n","fm._rebuild()\n","mpl.rcParams['axes.unicode_minus'] = False\n","\n","L_data_1 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_01_DEMO.csv')\n","L_data_2 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_02_PDDE.csv')\n","L_data_3 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_03_COP_U.csv')\n","L_data_4 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_04_PD_CLAC.csv')\n","L_data_5 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_05_BR.csv')\n","L_data_6 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_06_LPAY.csv')"]},{"cell_type":"code","source":["L_data_5['cop_c'].value_counts().sort_index().index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Iv0DINel2kPn","executionInfo":{"status":"ok","timestamp":1659599776201,"user_tz":-540,"elapsed":309,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"eed9efb0-1206-45b6-a001-f9ed5aed6140"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['A01', 'A02', 'A03', 'A04', 'A05', 'B01', 'C01', 'C02', 'D01', 'D02',\n","       'E01'],\n","      dtype='object')"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["data_list=[]\n","for idx in L_data_5['cop_c'].value_counts().sort_index().index:\n","  if idx.startswith('A'):\n","    data_list.append(L_data_2.loc[L_data_2['cop_c']==idx].groupby(by = 'de_dt',as_index=False)['buy_am'].sum())\n","  else:\n","    data_list.append(L_data_3.loc[L_data_3['cop_c']==idx].groupby(by = 'de_dt',as_index=False)['buy_am'].sum())"],"metadata":{"id":"WwRGwduh205q","executionInfo":{"status":"ok","timestamp":1659599904719,"user_tz":-540,"elapsed":2674,"user":{"displayName":"강태욱","userId":"11730563988901671307"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df = data_list[0]\n","for i in range(10):\n","  df = pd.merge(df,data_list[i+1],on='de_dt')\n","df.columns = ['de_dt','A01', 'A02', 'A03', 'A04', 'A05', 'B01', 'C01', 'C02', 'D01', 'D02','E01']\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":481},"id":"0Hs6k5kS1nPp","executionInfo":{"status":"ok","timestamp":1659600240593,"user_tz":-540,"elapsed":354,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"fa9ce6c8-2a75-41f2-fa6c-af920c30dd33"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: FutureWarning: Passing 'suffixes' which cause duplicate columns {'buy_am_x'} in the result is deprecated and will raise a MergeError in a future version.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"output_type":"execute_result","data":{"text/plain":["        de_dt          A01         A02         A03        A04         A05  \\\n","0    20210101   31534000.0  64305682.0  12609011.0  1383560.0   4028520.0   \n","1    20210102  363861270.0  74233493.0  13121311.0  1644080.0   7045350.0   \n","2    20210103  363511570.0  61417944.0   9854479.0  1367190.0   3926300.0   \n","3    20210104  114019340.0  49091168.0  14246030.0  2256820.0   1175700.0   \n","4    20210105   89574250.0  43979671.0  11125604.0  1775720.0   1934300.0   \n","..        ...          ...         ...         ...        ...         ...   \n","360  20211227   95036660.0  39924072.0   9714945.0  2680510.0  27220740.0   \n","361  20211228  161764460.0  37868434.0   8620998.0  2751110.0   3014950.0   \n","362  20211229  126609860.0  43247449.0   9128139.0  3000540.0   6074400.0   \n","363  20211230  133232040.0  46029532.0  10783430.0  2567830.0   2532740.0   \n","364  20211231  234343890.0  65022997.0  12463833.0  2886280.0   3264350.0   \n","\n","         B01      C01      C02      D01      D02     E01  \n","0    1289110   479250   898000  2849400   674880  633423  \n","1    2378115   297500   655830  3436770   738310  564287  \n","2    2283150   315500   638140  2882000   596230  330942  \n","3    2046938    70100   308150  2352530   640130  368514  \n","4    1656589   169100   144940  2830060   790610  301805  \n","..       ...      ...      ...      ...      ...     ...  \n","360  4250714  1731500  3316520  2939670  1127280  130221  \n","361  5573175  1626800  4079930  6429400  1206890  592937  \n","362  2935620  1404800  3557540  2851040  1317650  152573  \n","363  7441197  1399900  2731220  2992690  1167690  815235  \n","364  5390145   279400  3772900  3177470  2595470  557471  \n","\n","[365 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-404b4480-0b8a-43a9-a9c5-f418977d57c2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>de_dt</th>\n","      <th>A01</th>\n","      <th>A02</th>\n","      <th>A03</th>\n","      <th>A04</th>\n","      <th>A05</th>\n","      <th>B01</th>\n","      <th>C01</th>\n","      <th>C02</th>\n","      <th>D01</th>\n","      <th>D02</th>\n","      <th>E01</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20210101</td>\n","      <td>31534000.0</td>\n","      <td>64305682.0</td>\n","      <td>12609011.0</td>\n","      <td>1383560.0</td>\n","      <td>4028520.0</td>\n","      <td>1289110</td>\n","      <td>479250</td>\n","      <td>898000</td>\n","      <td>2849400</td>\n","      <td>674880</td>\n","      <td>633423</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20210102</td>\n","      <td>363861270.0</td>\n","      <td>74233493.0</td>\n","      <td>13121311.0</td>\n","      <td>1644080.0</td>\n","      <td>7045350.0</td>\n","      <td>2378115</td>\n","      <td>297500</td>\n","      <td>655830</td>\n","      <td>3436770</td>\n","      <td>738310</td>\n","      <td>564287</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20210103</td>\n","      <td>363511570.0</td>\n","      <td>61417944.0</td>\n","      <td>9854479.0</td>\n","      <td>1367190.0</td>\n","      <td>3926300.0</td>\n","      <td>2283150</td>\n","      <td>315500</td>\n","      <td>638140</td>\n","      <td>2882000</td>\n","      <td>596230</td>\n","      <td>330942</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20210104</td>\n","      <td>114019340.0</td>\n","      <td>49091168.0</td>\n","      <td>14246030.0</td>\n","      <td>2256820.0</td>\n","      <td>1175700.0</td>\n","      <td>2046938</td>\n","      <td>70100</td>\n","      <td>308150</td>\n","      <td>2352530</td>\n","      <td>640130</td>\n","      <td>368514</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20210105</td>\n","      <td>89574250.0</td>\n","      <td>43979671.0</td>\n","      <td>11125604.0</td>\n","      <td>1775720.0</td>\n","      <td>1934300.0</td>\n","      <td>1656589</td>\n","      <td>169100</td>\n","      <td>144940</td>\n","      <td>2830060</td>\n","      <td>790610</td>\n","      <td>301805</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>360</th>\n","      <td>20211227</td>\n","      <td>95036660.0</td>\n","      <td>39924072.0</td>\n","      <td>9714945.0</td>\n","      <td>2680510.0</td>\n","      <td>27220740.0</td>\n","      <td>4250714</td>\n","      <td>1731500</td>\n","      <td>3316520</td>\n","      <td>2939670</td>\n","      <td>1127280</td>\n","      <td>130221</td>\n","    </tr>\n","    <tr>\n","      <th>361</th>\n","      <td>20211228</td>\n","      <td>161764460.0</td>\n","      <td>37868434.0</td>\n","      <td>8620998.0</td>\n","      <td>2751110.0</td>\n","      <td>3014950.0</td>\n","      <td>5573175</td>\n","      <td>1626800</td>\n","      <td>4079930</td>\n","      <td>6429400</td>\n","      <td>1206890</td>\n","      <td>592937</td>\n","    </tr>\n","    <tr>\n","      <th>362</th>\n","      <td>20211229</td>\n","      <td>126609860.0</td>\n","      <td>43247449.0</td>\n","      <td>9128139.0</td>\n","      <td>3000540.0</td>\n","      <td>6074400.0</td>\n","      <td>2935620</td>\n","      <td>1404800</td>\n","      <td>3557540</td>\n","      <td>2851040</td>\n","      <td>1317650</td>\n","      <td>152573</td>\n","    </tr>\n","    <tr>\n","      <th>363</th>\n","      <td>20211230</td>\n","      <td>133232040.0</td>\n","      <td>46029532.0</td>\n","      <td>10783430.0</td>\n","      <td>2567830.0</td>\n","      <td>2532740.0</td>\n","      <td>7441197</td>\n","      <td>1399900</td>\n","      <td>2731220</td>\n","      <td>2992690</td>\n","      <td>1167690</td>\n","      <td>815235</td>\n","    </tr>\n","    <tr>\n","      <th>364</th>\n","      <td>20211231</td>\n","      <td>234343890.0</td>\n","      <td>65022997.0</td>\n","      <td>12463833.0</td>\n","      <td>2886280.0</td>\n","      <td>3264350.0</td>\n","      <td>5390145</td>\n","      <td>279400</td>\n","      <td>3772900</td>\n","      <td>3177470</td>\n","      <td>2595470</td>\n","      <td>557471</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>365 rows × 12 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-404b4480-0b8a-43a9-a9c5-f418977d57c2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-404b4480-0b8a-43a9-a9c5-f418977d57c2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-404b4480-0b8a-43a9-a9c5-f418977d57c2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df.to_excel(excel_writer='/content/drive/MyDrive/Colab Notebooks/롯데멤버스/제휴사별_일별_매출액.xlsx')"],"metadata":{"id":"2PQj-hiz4upj","executionInfo":{"status":"ok","timestamp":1659600462953,"user_tz":-540,"elapsed":1418,"user":{"displayName":"강태욱","userId":"11730563988901671307"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"Xz0FcG_q5VwH"},"execution_count":null,"outputs":[]}]}
{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"고객 클러스터링","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMTLpJwnlPHKMSbdNKz/ezL"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":605},"id":"ZLYVu2rzhxlO","executionInfo":{"status":"ok","timestamp":1659863326849,"user_tz":-540,"elapsed":47731,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"51937d34-641d-4b48-dbad-03ea662f780b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Selecting previously unselected package fonts-nanum.\n","(Reading database ... 155680 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...\n","Unpacking fonts-nanum (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-eco.\n","Preparing to unpack .../fonts-nanum-eco_1.000-6_all.deb ...\n","Unpacking fonts-nanum-eco (1.000-6) ...\n","Selecting previously unselected package fonts-nanum-extra.\n","Preparing to unpack .../fonts-nanum-extra_20170925-1_all.deb ...\n","Unpacking fonts-nanum-extra (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-coding.\n","Preparing to unpack .../fonts-nanum-coding_2.5-1_all.deb ...\n","Unpacking fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-extra (20170925-1) ...\n","Setting up fonts-nanum (20170925-1) ...\n","Setting up fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-eco (1.000-6) ...\n","Processing triggers for fontconfig (2.12.6-0ubuntu2) ...\n","NanumBarunGothic\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py:2882: DtypeWarning: Columns (4) have mixed types.Specify dtype option on import or set low_memory=False.\n","  exec(code_obj, self.user_global_ns, self.user_ns)\n"]},{"output_type":"execute_result","data":{"text/plain":["         cust  chnl_dv    pd_c     de_dt  de_hr   buy_am  buy_ct cop_c  \\\n","0  M430112881        1  PD0290  20210101     10  15000.0       1   A01   \n","1  M646853852        1  PD1369  20210101     10  79700.0       1   A01   \n","2  M430112881        1  PD0290  20210101     10  19000.0       1   A01   \n","3  M430112881        1  PD0290  20210101     10  19000.0       1   A01   \n","4  M430112881        1  PD0290  20210101     10  19000.0       1   A01   \n","\n","         rct_no ma_fem_dv ages zon_hlv     pd_nm clac_hlv_nm clac_mcls_nm  \n","0  A01000001113        여성  50대     Z17     남성티셔츠        남성의류       남성의류상의  \n","1  A01000002265        여성  40대     Z13  기타주방일회용품        주방잡화       주방일회용품  \n","2  A01000003148        여성  50대     Z17     남성티셔츠        남성의류       남성의류상의  \n","3  A01000003148        여성  50대     Z17     남성티셔츠        남성의류       남성의류상의  \n","4  A01000004946        여성  50대     Z17     남성티셔츠        남성의류       남성의류상의  "],"text/html":["\n","  <div id=\"df-77733754-7da8-4145-b4a2-feaa508ee580\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cust</th>\n","      <th>chnl_dv</th>\n","      <th>pd_c</th>\n","      <th>de_dt</th>\n","      <th>de_hr</th>\n","      <th>buy_am</th>\n","      <th>buy_ct</th>\n","      <th>cop_c</th>\n","      <th>rct_no</th>\n","      <th>ma_fem_dv</th>\n","      <th>ages</th>\n","      <th>zon_hlv</th>\n","      <th>pd_nm</th>\n","      <th>clac_hlv_nm</th>\n","      <th>clac_mcls_nm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M430112881</td>\n","      <td>1</td>\n","      <td>PD0290</td>\n","      <td>20210101</td>\n","      <td>10</td>\n","      <td>15000.0</td>\n","      <td>1</td>\n","      <td>A01</td>\n","      <td>A01000001113</td>\n","      <td>여성</td>\n","      <td>50대</td>\n","      <td>Z17</td>\n","      <td>남성티셔츠</td>\n","      <td>남성의류</td>\n","      <td>남성의류상의</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>M646853852</td>\n","      <td>1</td>\n","      <td>PD1369</td>\n","      <td>20210101</td>\n","      <td>10</td>\n","      <td>79700.0</td>\n","      <td>1</td>\n","      <td>A01</td>\n","      <td>A01000002265</td>\n","      <td>여성</td>\n","      <td>40대</td>\n","      <td>Z13</td>\n","      <td>기타주방일회용품</td>\n","      <td>주방잡화</td>\n","      <td>주방일회용품</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>M430112881</td>\n","      <td>1</td>\n","      <td>PD0290</td>\n","      <td>20210101</td>\n","      <td>10</td>\n","      <td>19000.0</td>\n","      <td>1</td>\n","      <td>A01</td>\n","      <td>A01000003148</td>\n","      <td>여성</td>\n","      <td>50대</td>\n","      <td>Z17</td>\n","      <td>남성티셔츠</td>\n","      <td>남성의류</td>\n","      <td>남성의류상의</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M430112881</td>\n","      <td>1</td>\n","      <td>PD0290</td>\n","      <td>20210101</td>\n","      <td>10</td>\n","      <td>19000.0</td>\n","      <td>1</td>\n","      <td>A01</td>\n","      <td>A01000003148</td>\n","      <td>여성</td>\n","      <td>50대</td>\n","      <td>Z17</td>\n","      <td>남성티셔츠</td>\n","      <td>남성의류</td>\n","      <td>남성의류상의</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>M430112881</td>\n","      <td>1</td>\n","      <td>PD0290</td>\n","      <td>20210101</td>\n","      <td>10</td>\n","      <td>19000.0</td>\n","      <td>1</td>\n","      <td>A01</td>\n","      <td>A01000004946</td>\n","      <td>여성</td>\n","      <td>50대</td>\n","      <td>Z17</td>\n","      <td>남성티셔츠</td>\n","      <td>남성의류</td>\n","      <td>남성의류상의</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77733754-7da8-4145-b4a2-feaa508ee580')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-77733754-7da8-4145-b4a2-feaa508ee580 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-77733754-7da8-4145-b4a2-feaa508ee580');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":1}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","import matplotlib.font_manager as fm\n","\n","!apt-get update -qq\n","!apt-get install fonts-nanum* -qq\n","path = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \n","font_name = fm.FontProperties(fname=path, size=10).get_name()\n","print(font_name)\n","plt.rc('font', family=font_name)\n","fm._rebuild()\n","mpl.rcParams['axes.unicode_minus'] = False\n","\n","L_data_1 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_01_DEMO.csv')\n","L_data_2 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_02_PDDE.csv')\n","L_data_3 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_03_COP_U.csv')\n","L_data_4 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_04_PD_CLAC.csv')\n","L_data_5 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_05_BR.csv')\n","L_data_6 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/롯데멤버스/LPOINT_BIG_COMP_06_LPAY.csv')\n","\n","df1 = L_data_1[['cust','ma_fem_dv','ages','zon_hlv']]\n","df2 = L_data_2[['cust','chnl_dv','pd_c','de_dt','de_hr','buy_am','buy_ct','cop_c','rct_no']]\n","df3 = L_data_4\n","\n","df = pd.merge(df2,df1,on='cust',how='left')\n","df = pd.merge(df,df3,on='pd_c',how='left')\n","df.head()"]},{"cell_type":"code","source":["df1 = df.groupby(by='cust',as_index=True).sum()[['buy_am','buy_ct']]\n","df2 = df.groupby(by='cust',as_index=True).count()[['rct_no']]\n","df3 = L_data_1[['cust','ma_fem_dv','ages','zon_hlv']]\n","\n","df['chnl_dv'] = df.apply(lambda x : 0 if x['chnl_dv']==2 else 1,axis=1)\n","df_cnt = df.groupby(by='cust',as_index=True).count()[['chnl_dv']]\n","df_sum = df.groupby(by='cust',as_index=True).sum()[['chnl_dv']]\n","df_sc = pd.merge(df_cnt,df_sum,on='cust')\n","df_sc.columns = ['count','sum']\n","# 온라인/오프라인 2 오프라인 0 온라인 1\n","df_sc['onoff']=2\n","df_sc['onoff'].loc[df_sc['sum']==0]=0\n","df_sc['onoff'].loc[df_sc['sum']==df_sc['count']]=1\n","\n","df_c = pd.merge(df1,df2,on='cust')\n","df_c = pd.merge(df_c,df3,on='cust')\n","df_c = pd.merge(df_c,df_sc['onoff'],on='cust')\n","df_c = df_c.set_index('cust',drop=True)\n","\n","dic_age = {'20대':20,'30대':30,'40대':40,'50대':50,'60대':60,'70대':70}\n","dic_zone = {'Z01':1,'Z02':2,'Z03':3,'Z04':4,'Z05':5,'Z06':6,'Z07':7,'Z08':8,'Z09':9,'Z10':10,\n","            'Z11':11,'Z12':12,'Z13':13,'Z14':14,'Z15':15,'Z16':16,'Z17':17}\n","dic_mf = {'남성':1,'여성':0}\n","df_c['ma_fem_dv'] = df_c.apply(lambda x:dic_mf[x['ma_fem_dv']],axis=1)\n","df_c['ages'] = df_c.apply(lambda x:dic_age[x['ages']],axis=1)\n","df_c['zon_hlv'] = df_c.apply(lambda x:dic_zone[x['zon_hlv']],axis=1)\n","df_c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"lqANsEUhieyY","executionInfo":{"status":"ok","timestamp":1659863371304,"user_tz":-540,"elapsed":44458,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"da5a051d-f755-4ca2-b26d-1a1c1b1d23e4"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                buy_am  buy_ct  rct_no  ma_fem_dv  ages  zon_hlv  onoff\n","cust                                                                   \n","M000034966    654120.0      63      51          0    40        7      1\n","M000136117  27373630.0     114     109          0    30       11      2\n","M000201112     53120.0      30      21          0    50       17      1\n","M000225114   1937700.0     182     159          0    40       17      1\n","M000261625   6052700.0      71      67          0    40       17      1\n","...                ...     ...     ...        ...   ...      ...    ...\n","M999599111   1484022.0      43      34          0    40        4      2\n","M999673157   2851370.0      28      24          1    30       10      1\n","M999770689   1187140.0     385     315          0    30       16      2\n","M999849895   1103792.0     119      72          0    20        4      1\n","M999962961  11847248.0     416     331          0    50       17      2\n","\n","[26917 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-c68d4178-50e1-4525-9136-a798c4930366\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>buy_am</th>\n","      <th>buy_ct</th>\n","      <th>rct_no</th>\n","      <th>ma_fem_dv</th>\n","      <th>ages</th>\n","      <th>zon_hlv</th>\n","      <th>onoff</th>\n","    </tr>\n","    <tr>\n","      <th>cust</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>M000034966</th>\n","      <td>654120.0</td>\n","      <td>63</td>\n","      <td>51</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>M000136117</th>\n","      <td>27373630.0</td>\n","      <td>114</td>\n","      <td>109</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>11</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>M000201112</th>\n","      <td>53120.0</td>\n","      <td>30</td>\n","      <td>21</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>17</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>M000225114</th>\n","      <td>1937700.0</td>\n","      <td>182</td>\n","      <td>159</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>17</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>M000261625</th>\n","      <td>6052700.0</td>\n","      <td>71</td>\n","      <td>67</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>17</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>M999599111</th>\n","      <td>1484022.0</td>\n","      <td>43</td>\n","      <td>34</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>M999673157</th>\n","      <td>2851370.0</td>\n","      <td>28</td>\n","      <td>24</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>10</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>M999770689</th>\n","      <td>1187140.0</td>\n","      <td>385</td>\n","      <td>315</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>16</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>M999849895</th>\n","      <td>1103792.0</td>\n","      <td>119</td>\n","      <td>72</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>M999962961</th>\n","      <td>11847248.0</td>\n","      <td>416</td>\n","      <td>331</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>17</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>26917 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c68d4178-50e1-4525-9136-a798c4930366')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c68d4178-50e1-4525-9136-a798c4930366 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c68d4178-50e1-4525-9136-a798c4930366');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["!pip install kmodes\n","\n","from kmodes.kprototypes import KPrototypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TubEB6VO740Z","executionInfo":{"status":"ok","timestamp":1659863375532,"user_tz":-540,"elapsed":4231,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"ced69465-f99d-466b-8992-1599db4dcae0"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting kmodes\n","  Downloading kmodes-0.12.1-py2.py3-none-any.whl (20 kB)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from kmodes) (1.1.0)\n","Requirement already satisfied: scikit-learn>=0.22.0 in /usr/local/lib/python3.7/dist-packages (from kmodes) (1.0.2)\n","Requirement already satisfied: numpy>=1.10.4 in /usr/local/lib/python3.7/dist-packages (from kmodes) (1.21.6)\n","Requirement already satisfied: scipy>=0.13.3 in /usr/local/lib/python3.7/dist-packages (from kmodes) (1.7.3)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.22.0->kmodes) (3.1.0)\n","Installing collected packages: kmodes\n","Successfully installed kmodes-0.12.1\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","\n","sc = StandardScaler()\n","df_scaled = sc.fit_transform(df_c[['buy_am','buy_ct','rct_no']])\n","df_cc = pd.concat([pd.DataFrame(df_scaled),df_c.reset_index()[['ma_fem_dv','ages','zon_hlv','onoff']]],\n","                  axis=1)\n","df_matrix = df_cc.values\n","df_matrix\n","\n","kproto = KPrototypes(n_clusters=4,init='Cao')\n","clusters = kproto.fit_predict(df_matrix,categorical=[3,4,5,6])\n","\n","clusters"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tZn92IX78puL","executionInfo":{"status":"ok","timestamp":1659864169585,"user_tz":-540,"elapsed":794056,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"a579dc49-6d53-43ca-fb21-efb530cc0100"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3, 3, 3, ..., 2, 3, 2], dtype=uint16)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df_c['cluster'] = clusters\n","df_c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"sCMesPxPFXxC","executionInfo":{"status":"ok","timestamp":1659864169585,"user_tz":-540,"elapsed":14,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"429eb961-2a49-4ee8-ac15-f3a7dafd8b53"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                buy_am  buy_ct  rct_no  ma_fem_dv  ages  zon_hlv  onoff  \\\n","cust                                                                      \n","M000034966    654120.0      63      51          0    40        7      1   \n","M000136117  27373630.0     114     109          0    30       11      2   \n","M000201112     53120.0      30      21          0    50       17      1   \n","M000225114   1937700.0     182     159          0    40       17      1   \n","M000261625   6052700.0      71      67          0    40       17      1   \n","...                ...     ...     ...        ...   ...      ...    ...   \n","M999599111   1484022.0      43      34          0    40        4      2   \n","M999673157   2851370.0      28      24          1    30       10      1   \n","M999770689   1187140.0     385     315          0    30       16      2   \n","M999849895   1103792.0     119      72          0    20        4      1   \n","M999962961  11847248.0     416     331          0    50       17      2   \n","\n","            cluster  \n","cust                 \n","M000034966        3  \n","M000136117        3  \n","M000201112        3  \n","M000225114        3  \n","M000261625        3  \n","...             ...  \n","M999599111        3  \n","M999673157        3  \n","M999770689        2  \n","M999849895        3  \n","M999962961        2  \n","\n","[26917 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-0b79448c-1c3c-4280-bfff-828fd4a1bfed\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>buy_am</th>\n","      <th>buy_ct</th>\n","      <th>rct_no</th>\n","      <th>ma_fem_dv</th>\n","      <th>ages</th>\n","      <th>zon_hlv</th>\n","      <th>onoff</th>\n","      <th>cluster</th>\n","    </tr>\n","    <tr>\n","      <th>cust</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>M000034966</th>\n","      <td>654120.0</td>\n","      <td>63</td>\n","      <td>51</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>M000136117</th>\n","      <td>27373630.0</td>\n","      <td>114</td>\n","      <td>109</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>11</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>M000201112</th>\n","      <td>53120.0</td>\n","      <td>30</td>\n","      <td>21</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>M000225114</th>\n","      <td>1937700.0</td>\n","      <td>182</td>\n","      <td>159</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>M000261625</th>\n","      <td>6052700.0</td>\n","      <td>71</td>\n","      <td>67</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>M999599111</th>\n","      <td>1484022.0</td>\n","      <td>43</td>\n","      <td>34</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>M999673157</th>\n","      <td>2851370.0</td>\n","      <td>28</td>\n","      <td>24</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>M999770689</th>\n","      <td>1187140.0</td>\n","      <td>385</td>\n","      <td>315</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>16</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>M999849895</th>\n","      <td>1103792.0</td>\n","      <td>119</td>\n","      <td>72</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>M999962961</th>\n","      <td>11847248.0</td>\n","      <td>416</td>\n","      <td>331</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>17</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>26917 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b79448c-1c3c-4280-bfff-828fd4a1bfed')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0b79448c-1c3c-4280-bfff-828fd4a1bfed button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0b79448c-1c3c-4280-bfff-828fd4a1bfed');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df_c = df_c.reset_index()"],"metadata":{"id":"BNhlJumNNWXe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","import seaborn as sns\n","\n","\n","X = df_c.iloc[:,1:8]\n","print(X)\n","pca = PCA(n_components=2)\n","pca.fit(X)\n","pca_df = pd.DataFrame(pca.transform(X))\n","\n","\n","mean_0 = pca_df[0].median()\n","mean_1 = pca_df[1].median()\n","std_0 = pca_df[0].std()\n","std_1 = pca_df[1].std()\n","\n","\n","pca_df[0] = pca_df.apply(lambda x : (x[0]-mean_0)/std_0,axis=1)\n","pca_df[1] = pca_df.apply(lambda x : (x[1]-mean_1)/std_1,axis=1)\n","\n","pca_df['cluster'] = clusters\n","pca_df\n","\n","plt.figure(figsize=(10,10))\n","axs = sns.scatterplot(0,1,hue='cluster',data=pca_df)\n","plt.xlim((-1,20))\n","plt.ylim((-10,25))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":920},"id":"nZae1FisFTPm","executionInfo":{"status":"ok","timestamp":1659864496764,"user_tz":-540,"elapsed":2872,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"46d37acd-452e-450a-cc18-92c8a9c41687"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["           buy_am  buy_ct  rct_no  ma_fem_dv  ages  zon_hlv  onoff\n","0        654120.0      63      51          0    40        7      1\n","1      27373630.0     114     109          0    30       11      2\n","2         53120.0      30      21          0    50       17      1\n","3       1937700.0     182     159          0    40       17      1\n","4       6052700.0      71      67          0    40       17      1\n","...           ...     ...     ...        ...   ...      ...    ...\n","26912   1484022.0      43      34          0    40        4      2\n","26913   2851370.0      28      24          1    30       10      1\n","26914   1187140.0     385     315          0    30       16      2\n","26915   1103792.0     119      72          0    20        4      1\n","26916  11847248.0     416     331          0    50       17      2\n","\n","[26917 rows x 7 columns]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# 스케일링\n","'''\n","from sklearn.cluster import KMeans\n","from sklearn.preprocessing import StandardScaler\n","\n","sc = StandardScaler()\n","df_scaled = sc.fit_transform(df_c)\n","pd.DataFrame(df_scaled)\n","\n","kmeans = KMeans(n_clusters=5)\n","clusters = kmeans.fit(df_scaled)\n","\n","df_c['cluster'] = clusters.labels_\n","df_c.head()\n","\n","# 시각화\n","\n","from sklearn.decomposition import PCA\n","import seaborn as sns\n","\n","\n","#X=df_scaled.copy()\n","X = df_c.iloc[:,:6]\n","df_r = df_c.reset_index()\n","pca = PCA(n_components=2)\n","pca.fit(X)\n","pca_df = pd.DataFrame(pca.transform(X))\n","\n","pca_df = pd.concat([pca_df,df_r['cluster']],axis=1)\n","print(pca_df)\n","plt.figure(figsize=(20,10))\n","axs = sns.scatterplot(0,1,hue='cluster',data=pca_df)\n","plt.show()\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"id":"IcqAta1duZHU","executionInfo":{"status":"ok","timestamp":1659771113170,"user_tz":-540,"elapsed":32,"user":{"displayName":"강태욱","userId":"11730563988901671307"}},"outputId":"ceef17e0-a058-402a-ea78-c9560e5da695"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"\\nfrom sklearn.cluster import KMeans\\nfrom sklearn.preprocessing import StandardScaler\\n\\nsc = StandardScaler()\\ndf_scaled = sc.fit_transform(df_c)\\npd.DataFrame(df_scaled)\\n\\nkmeans = KMeans(n_clusters=5)\\nclusters = kmeans.fit(df_scaled)\\n\\ndf_c['cluster'] = clusters.labels_\\ndf_c.head()\\n\\n# 시각화\\n\\nfrom sklearn.decomposition import PCA\\nimport seaborn as sns\\n\\n\\n#X=df_scaled.copy()\\nX = df_c.iloc[:,:6]\\ndf_r = df_c.reset_index()\\npca = PCA(n_components=2)\\npca.fit(X)\\npca_df = pd.DataFrame(pca.transform(X))\\n\\npca_df = pd.concat([pca_df,df_r['cluster']],axis=1)\\nprint(pca_df)\\nplt.figure(figsize=(20,10))\\naxs = sns.scatterplot(0,1,hue='cluster',data=pca_df)\\nplt.show()\\n\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":6}]}]}